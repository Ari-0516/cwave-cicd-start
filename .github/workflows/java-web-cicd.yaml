name: Java cicd

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    permissions:
      contents: read
      actions: read
      checks: write    # 테스트 결과 보고를 위한 권한2
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Run Checkstyle
      run: ./gradlew checkstyleMain checkstyleTest

    - name: Upload Checkstyle results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: checkstyle-report
        path: |
          **/build/reports/checkstyle/
        retention-days: 14

        
    - name: Run test java
      # run: ./gradlew test --info
      run: ./gradlew test

    - name: Generate list using Markdown
      run: |
        echo "## Workflow Execution Information" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "* Triggered by: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
        echo "* Event type: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
        echo "* Repository: ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
        echo "* Brach: ${{ github.ref }}" >> $GITHUB_STEP_SUMMARY

    - name: Upload Test Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-report
        path: |                    # 여러 경로 지정
          **/build/reports/tests/test/
          **/build/test-results/test/
        retention-days: 30
    - name: Notify on Failure
      if: failure()
      run: |
        echo "Tests failed! Pipeline will be stopped."
        exit 1

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Build with Gradle Wrapper
      run: ./gradlew build